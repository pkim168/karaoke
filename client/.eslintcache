[{"C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\index.js":"1","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\App.js":"2","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\reportWebVitals.js":"3","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\Home.js":"4","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\Host.js":"5","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\User.js":"6","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\Importer.js":"7","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\UserLibrary.js":"8","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\Player.js":"9","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\MainNavbar.js":"10","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\UserQueue.js":"11","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\UserPlaybackOptions.js":"12","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\Queue.js":"13","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\Library.js":"14","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\PlaybackOptions.js":"15"},{"size":517,"mtime":1659155995482,"results":"16","hashOfConfig":"17"},{"size":6665,"mtime":1659155995467,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1659155995482,"results":"19","hashOfConfig":"17"},{"size":2430,"mtime":1659155995467,"results":"20","hashOfConfig":"17"},{"size":805,"mtime":1659155995467,"results":"21","hashOfConfig":"17"},{"size":2442,"mtime":1659155995482,"results":"22","hashOfConfig":"17"},{"size":2812,"mtime":1659155995467,"results":"23","hashOfConfig":"17"},{"size":5092,"mtime":1659155995482,"results":"24","hashOfConfig":"17"},{"size":1333,"mtime":1659155995482,"results":"25","hashOfConfig":"17"},{"size":4086,"mtime":1659155995482,"results":"26","hashOfConfig":"17"},{"size":3416,"mtime":1674977714003,"results":"27","hashOfConfig":"17"},{"size":1410,"mtime":1659155995482,"results":"28","hashOfConfig":"17"},{"size":3450,"mtime":1674977772845,"results":"29","hashOfConfig":"17"},{"size":9565,"mtime":1659155995482,"results":"30","hashOfConfig":"17"},{"size":557,"mtime":1659155995482,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12p9pan",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},"C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\index.js",[],"C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\App.js",[],"C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\reportWebVitals.js",[],"C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\Home.js",[],"C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\Host.js",[],"C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\User.js",["70","71","72","73","74","75"],"import React from 'react';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport UserQueue from './UserQueue.js';\r\nimport UserLibrary from './UserLibrary.js';\r\nimport UserPlaybackOptions from './UserPlaybackOptions.js';\r\nimport Importer from './Importer.js';\r\nimport {Navbar, Row, Tab, Col, Nav, InputGroup, FormControl, Button, Container } from 'react-bootstrap';\r\n\r\nfunction User(props) {\r\n\r\n  return (\r\n    <div className='flex-column d-flex' style={{maxHeight:\"100vh\", height:\"100vh\" }}>\r\n      <Tab.Container defaultActiveKey=\"library\">\r\n        <Row style={{margin:\"0\"}}>\r\n          <Nav variant=\"pills\" fill justify style={{width: \"100%\"}}>\r\n            <Nav.Item>\r\n              <Nav.Link className=\"rounded-0\" eventKey=\"library\"> Library </Nav.Link>\r\n            </Nav.Item>\r\n            <div className=\"w-100\"></div>\r\n            <Nav.Item>\r\n              <Nav.Link className=\"rounded-0\" eventKey=\"queue\"> Queue </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link className=\"rounded-0\" eventKey=\"playback\"> Playback </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link className=\"rounded-0\" eventKey=\"add\"> Add Song </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Row>\r\n        <Row className=\"flex-grow-1\" style={{margin:\"0\", overflowY:\"scroll\"}}>\r\n          <Tab.Content className=\"w-100 h-100\">\r\n            <Tab.Pane eventKey=\"library\">\r\n              <UserLibrary library={props.library} addSong={props.addSong} />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"queue\">\r\n              <UserQueue queue={props.queue} removeSong={props.removeSong} />\r\n            </Tab.Pane>\r\n            <Tab.Pane className=\"h-100\" eventKey=\"playback\">\r\n              <div style={{paddingTop: \"5%\"}}>\r\n                <UserPlaybackOptions skipSong={props.skipSong} stopSong={props.stopSong} playSong={props.playSong} stop={props.stop} playbackRate={props.playbackRate} speed={props.speed} />\r\n              </div>\r\n            </Tab.Pane>\r\n            <Tab.Pane className=\"h-100\" eventKey=\"add\">\r\n              <div style={{paddingTop: \"5%\"}}>\r\n                <Importer addLibrary={props.addLibrary}/>\r\n              </div>\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\Importer.js",[],"C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\UserLibrary.js",["76"],"import React, { useState, useMemo } from 'react';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table';\r\nimport { matchSorter } from 'match-sorter';\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n  const [value, setValue] = useState(globalFilter)\r\n  const onChange = useAsyncDebounce(value => {\r\n    setGlobalFilter(value || undefined)\r\n  }, 200)\r\n\r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\" id=\"basic-addon1\">Search:</span>\r\n      </div>\r\n      <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" value={value || \"\"}\r\n        onChange={e => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Search ${count} records...`}\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\nconst TableComponent = (props) => {\r\n  const defaultColumn = useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const filterTypes = useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Title',\r\n        accessor: 'title',\r\n      },\r\n      {\r\n        Header: 'Artist',\r\n        accessor: 'artist',\r\n      },\r\n      {\r\n        Header: '',\r\n        accessor: 'button',\r\n        Cell: ({ row: { original } }) => {\r\n          return (<button className=\"btn btn-outline-dark\" onClick={() => {console.log(original); props.addSong(original)}}>Queue</button>)\r\n        },\r\n      },\r\n    ],[]\r\n  );\r\n\r\n\r\n  const data = useMemo(() => {\r\n    var tableData = props.library;\r\n    return tableData.map(function(song, i) {\r\n      return (\r\n        {\r\n          code: song.code,\r\n          title: song.title,\r\n          artist: song.artist,\r\n          url: song.url,\r\n          index: i\r\n        }\r\n      );\r\n    })}, [props.library]);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n    },\r\n    useFilters, // useFilters!\r\n    useGlobalFilter // useGlobalFilter!\r\n  )\r\n\r\n  const table = (\r\n    <>\r\n      <GlobalFilter\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={state.globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n      />\r\n      <table className=\"table table-hover table-sm\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr className=\"d-flex\" {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th className=\"col\" {...column.getHeaderProps()}>\r\n                  {column.render('Header')}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody className=\"scroll\" {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr className=\"d-flex\" {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td className=\"col\" {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n  return table;\r\n}\r\n\r\nfunction Library(props) {\r\n\r\n  return (\r\n    <div className=\"user-table-fixed\">\r\n      <TableComponent {...props}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Library;\r\n\r\n// Library reads from json\r\n// whenever video is added to queue, check if already in library.\r\n// If so dont do anything\r\n// If not, ask if want to add to library. If so, prompt for song name and artist. then add to json and current library state\r\n","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\Player.js",[],"C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\MainNavbar.js",["77","78","79","80","81"],"import React, {useEffect} from 'react';\r\nimport $ from 'jquery';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Navbar, Nav, Container, Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport Queue from './Queue.js';\r\nimport Library from './Library.js';\r\nimport PlaybackOptions from './PlaybackOptions.js';\r\nimport Importer from './Importer.js';\r\n\r\nfunction MainNavbar(props) {\r\n\r\n  useEffect(() => {\r\n    $('.dropdown').on({\r\n      \"shown.bs.dropdown\": function() { this.closable = false; },\r\n      \"hide.bs.dropdown\":  function(e) {\r\n        if (e.clickEvent) {\r\n          e.preventDefault();\r\n        }\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Navbar bg=\"white\" expand=\"sm\" fixed=\"top\" variant=\"light\" className=\"shadow-sm py-1\">\r\n      <Navbar.Toggle aria-controls=\"navbarContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" className=\"navbar-toggler\"><span className=\"navbar-toggler-icon\"></span></Navbar.Toggle>\r\n      <Navbar.Collapse id=\"navbarSupportedContent\">\r\n        <Nav className=\"mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <div className=\"dropdown\" >\r\n              <a className=\"nav-link\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Queue </a>\r\n              <div className=\"dropdown-menu\" id=\"queue\" aria-labelledby=\"dropdownMenuButton\">\r\n                <Queue queue={props.queue} removeSong={props.removeSong} />\r\n              </div>\r\n            </div>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <div className=\"dropdown\" >\r\n              <a className=\"nav-link\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Library </a>\r\n              <div className=\"dropdown-menu\" id=\"library\" aria-labelledby=\"dropdownMenuButton\">\r\n                <Library library={props.library} addSong={props.addSong} editLibrary={props.editLibrary} deleteSong={props.deleteSong} />\r\n              </div>\r\n            </div>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <div className=\"dropdown\" >\r\n              <a className=\"nav-link\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Playback Options </a>\r\n              <div className=\"dropdown-menu\" id=\"playback-options\" aria-labelledby=\"dropdownMenuButton\">\r\n                <PlaybackOptions skipSong={props.skipSong} stopSong={props.stopSong} playSong={props.playSong} stop={props.stop} />\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </Nav>\r\n        <Nav className=\"justify-content-center\">\r\n          <li className=\"nav-item\">\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <Button variant=\"outline-secondary\" onClick={() => {\r\n                  props.speed('down', props.playbackRate);\r\n                }}> - </Button>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                id=\"speed\"\r\n                placeholder=\"x1\"\r\n                aria-label=\"Speed\"\r\n                aria-describedby=\"basic-addon1\"\r\n                value={\"Speed: x\"+props.playbackRate}\r\n                style={{textAlign: \"center\"}}\r\n                disabled\r\n              />\r\n              <InputGroup.Append>\r\n                <Button variant=\"outline-secondary\" onClick={() => {\r\n                  props.speed('up', props.playbackRate);\r\n                }}> + </Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </li>\r\n        </Nav>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <li className=\"nav-item\">\r\n            <div className=\"dropdown\" >\r\n              <a className=\"nav-link\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Add to Library </a>\r\n              <div className=\"dropdown-menu\" id=\"options\" aria-labelledby=\"dropdownMenuButton\">\r\n                <Importer addLibrary={props.addLibrary}/>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default MainNavbar;\r\n","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\UserQueue.js",["82","83"],"import React, { useMemo } from 'react';\r\nimport $ from 'jquery';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\n\r\nfunction UserQueue(props) {\r\n  // console.log(props.queue);\r\n\r\n  let header = (\r\n    <tr className=\"d-flex\" key={\"head\"}>\r\n      <th className=\"col-4\" key={'Title'}>Title</th>\r\n      <th className=\"col-4\" key={'Artist'}>Artist</th>\r\n      <th className=\"col-4\" key={'Button'}></th>\r\n    </tr>\r\n  );\r\n\r\n  // let rows = useMemo(() => {\r\n  //   var data = Object.values(props.queue);\r\n  //   return data.map(function(song, i) {\r\n  //     let time = Date.now();\r\n  //     let key = song.code + time;\r\n  //     return (\r\n  //       <tr className=\"d-flex\" key={\"row\" + i + key}>\r\n  //         <td className=\"col\" key={key}>{song.code}</td>\r\n  //         <td className=\"col\" key={key + \"title\"}>{song.title}</td>\r\n  //         <td className=\"col\" key={key + \"artist\"}>{song.artist}</td>\r\n  //         <td className=\"col\" key={\"button\"+song.code}><button className=\"btn btn-outline-dark\" key={key} onClick={() => props.removeSong(i)}>Remove from Queue</button></td>\r\n  //       </tr>\r\n  //     );\r\n  //   })\r\n  // }, [props.queue]);\r\n\r\n  let rows = useMemo(() => {\r\n    var data = Object.values(props.queue);\r\n    return data.map(function(song, i) {\r\n      let key = song.code + uuidv4();\r\n      return (\r\n        <tr className=\"d-flex\" key={\"row\" + i + key}>\r\n          <td className=\"col-4 marquee\" id={key + \"title\"} key={key + \"title\"} onPointerEnter={(event) => {\r\n            console.log('entered');\r\n            var id = event.target.id;\r\n            var obj = document.getElementById(id);\r\n            console.log(id);\r\n            if (id.substring(id.length - 4, id.length) === \"anim\") {\r\n              id = id.substring(0, id.length-4);\r\n            }\r\n            if (!obj.style.overflow || obj.style.overflow === \"visible\") {\r\n              obj.style.overflow = 'hidden';\r\n            }\r\n            if (obj.clientWidth < obj.scrollWidth || obj.clientHeight < obj.scrollHeight) {\r\n              var anim = document.getElementById(event.target.id+'anim');\r\n              if (anim) {\r\n                anim.className = 'anim';\r\n              }\r\n              else {\r\n                console.log(\"cant find anim\");\r\n                console.log(event.target.id);\r\n              }\r\n            }\r\n          }} onAnimationEnd={(event) => {\r\n            console.log('anim end');\r\n            var obj = document.getElementById(event.target.id);\r\n            if (obj) {\r\n              obj.className = '';\r\n            }\r\n          }} ><span id={key + \"titleanim\"} className=''>{song.title}</span></td>\r\n          <td className=\"col-4\" key={key + \"artist\"}>{song.artist}</td>\r\n          <td className=\"col-4\" key={\"button\"+song.code} style={{textAlign: \"center\"}}><button className=\"btn btn-outline-dark\" style={{width: \"100%\"}} key={key} onClick={() => props.removeSong(i)}>Remove</button></td>\r\n        </tr>\r\n      );\r\n    })\r\n  }, [props.queue]);\r\n\r\n  const table = (\r\n    <table style={{width: \"100%\", maxWidth:\"100%\", tableLayout:\"fixed\", maxHeight:\"100%\"}}>\r\n      <thead>\r\n        {header}\r\n      </thead>\r\n      <tbody className=\"scroll\">\r\n        {rows}\r\n      </tbody>\r\n    </table>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {table}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserQueue;\r\n","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\UserPlaybackOptions.js",["84"],"import React from 'react';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, ButtonGroup, Button, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nfunction UserPlaybackOptions(props) {\r\n  return (\r\n    <>\r\n      <ButtonGroup size=\"lg\" className=\"w-100\">\r\n        <Button onClick={props.skipSong}> Skip </Button>\r\n        <Button onClick={() => {\r\n          if (!props.stop) {\r\n            props.stopSong();\r\n          }\r\n        }}> Stop </Button>\r\n        <Button onClick={props.playSong}> Play </Button>\r\n      </ButtonGroup>\r\n      <InputGroup>\r\n        <InputGroup.Prepend>\r\n          <Button variant=\"outline-secondary\" onClick={() => {\r\n            props.speed('down', props.playbackRate);\r\n          }}> - </Button>\r\n        </InputGroup.Prepend>\r\n        <FormControl\r\n          id=\"speed\"\r\n          placeholder=\"x1\"\r\n          aria-label=\"Speed\"\r\n          aria-describedby=\"basic-addon1\"\r\n          style={{textAlign: \"center\"}}\r\n          value={\"Speed: x\"+props.playbackRate}\r\n          disabled\r\n        />\r\n        <InputGroup.Append>\r\n          <Button variant=\"outline-secondary\" onClick={() => {\r\n            props.speed('up', props.playbackRate);\r\n          }}> + </Button>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n    </>\r\n  );\r\n}\r\n\r\n  export default UserPlaybackOptions\r\n","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\Queue.js",["85","86"],"import React, { useMemo } from 'react';\r\nimport $ from 'jquery';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\n\r\nfunction Queue(props) {\r\n  // console.log(props.queue);\r\n\r\n\r\n  let header = (\r\n    <tr className=\"d-flex\" key={\"head\"}>\r\n      <th className=\"col\" key={'Code'}>Code</th>\r\n      <th className=\"col\" key={'Title'}>Title</th>\r\n      <th className=\"col\" key={'Artist'}>Artist</th>\r\n      <th className=\"col\" key={'Button'}></th>\r\n    </tr>\r\n  );\r\n\r\n  // let rows = useMemo(() => {\r\n  //   var data = Object.values(props.queue);\r\n  //   return data.map(function(song, i) {\r\n  //     let time = Date.now();\r\n  //     let key = song.code + time;\r\n  //     return (\r\n  //       <tr className=\"d-flex\" key={\"row\" + i + key}>\r\n  //         <td className=\"col\" key={key}>{song.code}</td>\r\n  //         <td className=\"col\" key={key + \"title\"}>{song.title}</td>\r\n  //         <td className=\"col\" key={key + \"artist\"}>{song.artist}</td>\r\n  //         <td className=\"col\" key={\"button\"+song.code}><button className=\"btn btn-outline-dark\" key={key} onClick={() => props.removeSong(i)}>Remove from Queue</button></td>\r\n  //       </tr>\r\n  //     );\r\n  //   })\r\n  // }, [props.queue]);\r\n\r\n  let rows = useMemo(() => {\r\n    var data = Object.values(props.queue);\r\n    return data.map(function(song, i) {\r\n      let key = song.code + uuidv4();\r\n      return (\r\n        <tr className=\"d-flex\" key={\"row\" + i + key}>\r\n          <td className=\"col\" key={key}>{song.code}</td>\r\n          <td className=\"col marquee\" id={key + \"title\"} key={key + \"title\"} onMouseEnter={(event) => {\r\n            console.log('entered');\r\n            var id = event.target.id;\r\n            var obj = document.getElementById(id);\r\n            console.log(id);\r\n            if (id.substring(id.length - 4, id.length) === \"anim\") {\r\n              id = id.substring(0, id.length-4);\r\n            }\r\n            if (!obj.style.overflow || obj.style.overflow === \"visible\") {\r\n              obj.style.overflow = 'hidden';\r\n            }\r\n            if (obj.clientWidth < obj.scrollWidth || obj.clientHeight < obj.scrollHeight) {\r\n              var anim = document.getElementById(event.target.id+'anim');\r\n              if (anim) {\r\n                anim.className = 'anim';\r\n              }\r\n              else {\r\n                console.log(\"cant find anim\");\r\n                console.log(event.target.id);\r\n              }\r\n            }\r\n          }} onAnimationEnd={(event) => {\r\n            console.log('anim end');\r\n            var obj = document.getElementById(event.target.id);\r\n            if (obj) {\r\n              obj.className = '';\r\n            }\r\n          }} ><span id={key + \"titleanim\"} className=''>{song.title}</span></td>\r\n          <td className=\"col\" key={key + \"artist\"}>{song.artist}</td>\r\n          <td className=\"col\" key={\"button\"+song.code}><button className=\"btn btn-outline-dark\" key={key} onClick={() => props.removeSong(i)}>Remove from Queue</button></td>\r\n        </tr>\r\n      );\r\n    })\r\n  }, [props.queue]);\r\n\r\n  const table = (\r\n    <table className=\"table table-hover table-sm\">\r\n      <thead>\r\n        {header}\r\n      </thead>\r\n      <tbody className=\"scroll\">\r\n        {rows}\r\n      </tbody>\r\n    </table>\r\n  );\r\n\r\n  return (\r\n    <div className=\"table-fixed\">\r\n      {table}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Queue;\r\n","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\Library.js",["87"],"import React, { useState, useMemo } from 'react';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table';\r\nimport { InputGroup, FormControl } from 'react-bootstrap';\r\nimport { matchSorter } from 'match-sorter';\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n  const [value, setValue] = useState(globalFilter)\r\n  const onChange = useAsyncDebounce(value => {\r\n    setGlobalFilter(value || undefined)\r\n  }, 200)\r\n\r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\" id=\"basic-addon1\">Search:</span>\r\n      </div>\r\n      <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" value={value || \"\"}\r\n        onChange={e => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Search ${count} records...`}\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\nconst TableComponent = (props) => {\r\n  const defaultColumn = useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const filterTypes = useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Code',\r\n        accessor: 'code', // accessor is the \"key\" in the data\r\n        show: false\r\n      },\r\n      {\r\n        Header: 'Title',\r\n        accessor: 'title',\r\n      },\r\n      {\r\n        Header: 'Artist',\r\n        accessor: 'artist',\r\n      },\r\n      {\r\n        Header: '',\r\n        accessor: 'button',\r\n        Cell: ({ row: { original } }) => {\r\n          return (<button className=\"btn btn-outline-dark\" onClick={() => props.addSong(original)}>Add to Queue</button>)\r\n        },\r\n      },\r\n      {\r\n        Header: '',\r\n        accessor: 'options',\r\n        Cell: ({ row: { original } }) => {\r\n          return (<button className=\"btn btn-outline-dark\" data-toggle=\"modal\" data-target=\"#optionModal\" onClick={() => {\r\n            props.setOption(original);\r\n            document.getElementById(\"editTitle\").value = original.title;\r\n            document.getElementById(\"editArtist\").value = original.artist;\r\n          }} >Options</button>)\r\n        },\r\n      },\r\n    ],[]\r\n  );\r\n\r\n\r\n  const data = useMemo(() => {\r\n    var tableData = props.library;\r\n    return tableData.map(function(song, i) {\r\n      return (\r\n        {\r\n          code: song.code,\r\n          title: song.title,\r\n          artist: song.artist,\r\n          url: song.url,\r\n          index: i\r\n        }\r\n      );\r\n    })}, [props.library]);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n    },\r\n    useFilters, // useFilters!\r\n    useGlobalFilter // useGlobalFilter!\r\n  )\r\n\r\n  const table = (\r\n    <>\r\n      <GlobalFilter\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={state.globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n      />\r\n      <table className=\"table table-hover table-sm\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr className=\"d-flex\" {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th className=\"col\" {...column.getHeaderProps()}>\r\n                  {column.render('Header')}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody className=\"scroll\" {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr className=\"d-flex\" {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td className=\"col\" {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"modal fade\" id=\"optionModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"optionModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"optionModalLabel\">{props.option.title}</h5>\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"basic-addon2\">Title</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  id=\"editTitle\"\r\n                  placeholder=\"Title\"\r\n                  aria-label=\"editTitle\"\r\n                  aria-describedby=\"basic-addon2\"\r\n                />\r\n              </InputGroup>\r\n              <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"basic-addon3\">Artist</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  id=\"editArtist\"\r\n                  placeholder=\"Artist\"\r\n                  aria-label=\"editArtist\"\r\n                  aria-describedby=\"basic-addon3\"\r\n                />\r\n              </InputGroup>\r\n              {/*<InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"basic-addon3\">Tags</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  id=\"editTags\"\r\n                  placeholder=\"Tags\"\r\n                  aria-label=\"tags\"\r\n                  aria-describedby=\"basic-addon3\"\r\n                />\r\n              </InputGroup>*/}\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#deleteModal\" >Delete</button>\r\n              <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={() => {\r\n                var title = document.getElementById(\"editTitle\").value;\r\n                var artist = document.getElementById(\"editArtist\").value;\r\n                props.editLibrary({\"code\": props.option.code, \"title\": title, \"artist\": artist});\r\n                return;\r\n              }}>Save changes</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal fade\" id=\"deleteModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"deleteModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"deleteModalLabel\">Are you sure you want to delete?</h5>\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n              <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={() => {\r\n                props.deleteSong(props.option);\r\n                return;\r\n              }}>Delete</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n  return table;\r\n}\r\n\r\nfunction Library(props) {\r\n\r\n  var [option, setOption] = useState('');\r\n\r\n  return (\r\n    <div className=\"table-fixed\">\r\n      <TableComponent setOption={setOption} option={option} {...props}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Library;\r\n\r\n// Library reads from json\r\n// whenever video is added to queue, check if already in library.\r\n// If so dont do anything\r\n// If not, ask if want to add to library. If so, prompt for song name and artist. then add to json and current library state\r\n","C:\\Users\\pkim1\\Documents\\GitHub\\karaoke\\client\\src\\components\\PlaybackOptions.js",["88","89","90"],"import React from 'react';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction PlaybackOptions(props) {\r\n  return (\r\n    <>\r\n      <a className=\"dropdown-item\" onClick={props.skipSong}> Skip </a>\r\n      <a className=\"dropdown-item\" onClick={() => {\r\n        if (!props.stop) {\r\n          props.stopSong();\r\n        }\r\n      }}> Stop </a>\r\n      <a className=\"dropdown-item\" onClick={props.playSong}> Play </a>\r\n    </>\r\n  );\r\n}\r\n\r\n  export default PlaybackOptions\r\n",{"ruleId":"91","severity":1,"message":"92","line":8,"column":9,"nodeType":"93","messageId":"94","endLine":8,"endColumn":15},{"ruleId":"91","severity":1,"message":"95","line":8,"column":27,"nodeType":"93","messageId":"94","endLine":8,"endColumn":30},{"ruleId":"91","severity":1,"message":"96","line":8,"column":37,"nodeType":"93","messageId":"94","endLine":8,"endColumn":47},{"ruleId":"91","severity":1,"message":"97","line":8,"column":49,"nodeType":"93","messageId":"94","endLine":8,"endColumn":60},{"ruleId":"91","severity":1,"message":"98","line":8,"column":62,"nodeType":"93","messageId":"94","endLine":8,"endColumn":68},{"ruleId":"91","severity":1,"message":"99","line":8,"column":70,"nodeType":"93","messageId":"94","endLine":8,"endColumn":79},{"ruleId":"100","severity":1,"message":"101","line":98,"column":7,"nodeType":"102","endLine":98,"endColumn":9,"suggestions":"103"},{"ruleId":"91","severity":1,"message":"99","line":5,"column":23,"nodeType":"93","messageId":"94","endLine":5,"endColumn":32},{"ruleId":"104","severity":1,"message":"105","line":31,"column":15,"nodeType":"106","endLine":31,"endColumn":105},{"ruleId":"104","severity":1,"message":"105","line":39,"column":15,"nodeType":"106","endLine":39,"endColumn":105},{"ruleId":"104","severity":1,"message":"105","line":47,"column":15,"nodeType":"106","endLine":47,"endColumn":105},{"ruleId":"104","severity":1,"message":"105","line":82,"column":15,"nodeType":"106","endLine":82,"endColumn":105},{"ruleId":"91","severity":1,"message":"107","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":9},{"ruleId":"100","severity":1,"message":"101","line":74,"column":6,"nodeType":"102","endLine":74,"endColumn":19,"suggestions":"108"},{"ruleId":"91","severity":1,"message":"99","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":19},{"ruleId":"91","severity":1,"message":"107","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":9},{"ruleId":"100","severity":1,"message":"101","line":77,"column":6,"nodeType":"102","endLine":77,"endColumn":19,"suggestions":"109"},{"ruleId":"100","severity":1,"message":"101","line":115,"column":7,"nodeType":"102","endLine":115,"endColumn":9,"suggestions":"110"},{"ruleId":"104","severity":1,"message":"105","line":8,"column":7,"nodeType":"106","endLine":8,"endColumn":61},{"ruleId":"104","severity":1,"message":"105","line":9,"column":7,"nodeType":"106","endLine":13,"endColumn":10},{"ruleId":"104","severity":1,"message":"105","line":14,"column":7,"nodeType":"106","endLine":14,"endColumn":61},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useMemo call and refer to those specific props inside useMemo.","ArrayExpression",["111"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'$' is defined but never used.",["112"],["113"],["114"],{"desc":"115","fix":"116"},{"desc":"115","fix":"117"},{"desc":"115","fix":"118"},{"desc":"115","fix":"119"},"Update the dependencies array to be: [props]",{"range":"120","text":"121"},{"range":"122","text":"121"},{"range":"123","text":"121"},{"range":"124","text":"121"},[2781,2783],"[props]",[3066,3079],[3115,3128],[3425,3427]]