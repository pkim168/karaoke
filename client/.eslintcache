[{"D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\Queue.js":"1","D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\Player.js":"2","D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\Host.js":"3","D:\\Documents\\GitHub\\karaoke\\client\\src\\App.js":"4","D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\MainNavbar.js":"5","D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\User.js":"6","D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\Home.js":"7","D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\Library.js":"8","D:\\Documents\\GitHub\\karaoke\\client\\src\\reportWebVitals.js":"9","D:\\Documents\\GitHub\\karaoke\\client\\src\\index.js":"10","D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\PlaybackOptions.js":"11","D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\Importer.js":"12","D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\UserLibrary.js":"13","D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\UserPlaybackOptions.js":"14","D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\UserQueue.js":"15"},{"size":3450,"mtime":1612225114386,"results":"16","hashOfConfig":"17"},{"size":1259,"mtime":1612249730510,"results":"18","hashOfConfig":"17"},{"size":655,"mtime":1612245484010,"results":"19","hashOfConfig":"17"},{"size":7212,"mtime":1614561360398,"results":"20","hashOfConfig":"17"},{"size":4023,"mtime":1614561360317,"results":"21","hashOfConfig":"17"},{"size":2388,"mtime":1612397722028,"results":"22","hashOfConfig":"17"},{"size":2430,"mtime":1612075517975,"results":"23","hashOfConfig":"17"},{"size":5213,"mtime":1612231755378,"results":"24","hashOfConfig":"17"},{"size":362,"mtime":1610740921810,"results":"25","hashOfConfig":"17"},{"size":500,"mtime":1610740921810,"results":"26","hashOfConfig":"17"},{"size":557,"mtime":1612245454269,"results":"27","hashOfConfig":"17"},{"size":2148,"mtime":1612075517093,"results":"28","hashOfConfig":"17"},{"size":5107,"mtime":1612397558727,"results":"29","hashOfConfig":"17"},{"size":634,"mtime":1612324236465,"results":"30","hashOfConfig":"17"},{"size":3418,"mtime":1612397382330,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"8ip7b9",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\Queue.js",["65","66"],"import React, { useMemo } from 'react';\r\nimport $ from 'jquery';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction Queue(props) {\r\n  // console.log(props.queue);\r\n  const uuidv4 = require(\"uuid/v4\");\r\n\r\n  let header = (\r\n    <tr className=\"d-flex\" key={\"head\"}>\r\n      <th className=\"col\" key={'Code'}>Code</th>\r\n      <th className=\"col\" key={'Title'}>Title</th>\r\n      <th className=\"col\" key={'Artist'}>Artist</th>\r\n      <th className=\"col\" key={'Button'}></th>\r\n    </tr>\r\n  );\r\n\r\n  // let rows = useMemo(() => {\r\n  //   var data = Object.values(props.queue);\r\n  //   return data.map(function(song, i) {\r\n  //     let time = Date.now();\r\n  //     let key = song.code + time;\r\n  //     return (\r\n  //       <tr className=\"d-flex\" key={\"row\" + i + key}>\r\n  //         <td className=\"col\" key={key}>{song.code}</td>\r\n  //         <td className=\"col\" key={key + \"title\"}>{song.title}</td>\r\n  //         <td className=\"col\" key={key + \"artist\"}>{song.artist}</td>\r\n  //         <td className=\"col\" key={\"button\"+song.code}><button className=\"btn btn-outline-dark\" key={key} onClick={() => props.removeSong(i)}>Remove from Queue</button></td>\r\n  //       </tr>\r\n  //     );\r\n  //   })\r\n  // }, [props.queue]);\r\n\r\n  let rows = useMemo(() => {\r\n    var data = Object.values(props.queue);\r\n    return data.map(function(song, i) {\r\n      let key = song.code + uuidv4();\r\n      return (\r\n        <tr className=\"d-flex\" key={\"row\" + i + key}>\r\n          <td className=\"col\" key={key}>{song.code}</td>\r\n          <td className=\"col marquee\" id={key + \"title\"} key={key + \"title\"} onMouseEnter={(event) => {\r\n            console.log('entered');\r\n            var id = event.target.id;\r\n            var obj = document.getElementById(id);\r\n            console.log(id);\r\n            if (id.substring(id.length - 4, id.length) === \"anim\") {\r\n              id = id.substring(0, id.length-4);\r\n            }\r\n            if (!obj.style.overflow || obj.style.overflow === \"visible\") {\r\n              obj.style.overflow = 'hidden';\r\n            }\r\n            if (obj.clientWidth < obj.scrollWidth || obj.clientHeight < obj.scrollHeight) {\r\n              var anim = document.getElementById(event.target.id+'anim');\r\n              if (anim) {\r\n                anim.className = 'anim';\r\n              }\r\n              else {\r\n                console.log(\"cant find anim\");\r\n                console.log(event.target.id);\r\n              }\r\n            }\r\n          }} onAnimationEnd={(event) => {\r\n            console.log('anim end');\r\n            var obj = document.getElementById(event.target.id);\r\n            if (obj) {\r\n              obj.className = '';\r\n            }\r\n          }} ><span id={key + \"titleanim\"} className=''>{song.title}</span></td>\r\n          <td className=\"col\" key={key + \"artist\"}>{song.artist}</td>\r\n          <td className=\"col\" key={\"button\"+song.code}><button className=\"btn btn-outline-dark\" key={key} onClick={() => props.removeSong(i)}>Remove from Queue</button></td>\r\n        </tr>\r\n      );\r\n    })\r\n  }, [props.queue]);\r\n\r\n  const table = (\r\n    <table className=\"table table-hover table-sm\">\r\n      <thead>\r\n        {header}\r\n      </thead>\r\n      <tbody className=\"scroll\">\r\n        {rows}\r\n      </tbody>\r\n    </table>\r\n  );\r\n\r\n  return (\r\n    <div className=\"table-fixed\">\r\n      {table}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Queue;\r\n","D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\Player.js",[],"D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\Host.js",[],"D:\\Documents\\GitHub\\karaoke\\client\\src\\App.js",["67"],"D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\MainNavbar.js",["68","69","70","71","72"],"D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\User.js",["73","74","75","76","77","78"],"D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\Home.js",[],"D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\Library.js",["79"],"import React, { useState, useMemo } from 'react';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table';\r\nimport { matchSorter } from 'match-sorter';\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n  const [value, setValue] = useState(globalFilter)\r\n  const onChange = useAsyncDebounce(value => {\r\n    setGlobalFilter(value || undefined)\r\n  }, 200)\r\n\r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\" id=\"basic-addon1\">Search:</span>\r\n      </div>\r\n      <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" value={value || \"\"}\r\n        onChange={e => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Search ${count} records...`}\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\nconst TableComponent = (props) => {\r\n  const defaultColumn = useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const filterTypes = useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Code',\r\n        accessor: 'code', // accessor is the \"key\" in the data\r\n        show: false\r\n      },\r\n      {\r\n        Header: 'Title',\r\n        accessor: 'title',\r\n      },\r\n      {\r\n        Header: 'Artist',\r\n        accessor: 'artist',\r\n      },\r\n      {\r\n        Header: '',\r\n        accessor: 'button',\r\n        Cell: ({ row: { original } }) => {\r\n          return (<button className=\"btn btn-outline-dark\" onClick={() => props.addSong(original)}>Add to Queue</button>)\r\n        },\r\n      },\r\n    ],[]\r\n  );\r\n\r\n\r\n  const data = useMemo(() => {\r\n    var tableData = Object.values(props.library);\r\n    return tableData.map(function(song, i) {\r\n      return (\r\n        {\r\n          code: song.code,\r\n          title: song.title,\r\n          artist: song.artist,\r\n          url: song.url,\r\n          index: i\r\n        }\r\n      );\r\n    })}, [props.library]);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n    },\r\n    useFilters, // useFilters!\r\n    useGlobalFilter // useGlobalFilter!\r\n  )\r\n\r\n  const table = (\r\n    <>\r\n      <GlobalFilter\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={state.globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n      />\r\n      <table className=\"table table-hover table-sm\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr className=\"d-flex\" {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th className=\"col\" {...column.getHeaderProps()}>\r\n                  {column.render('Header')}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody className=\"scroll\" {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr className=\"d-flex\" {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td className=\"col\" {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n  return table;\r\n}\r\n\r\nfunction Library(props) {\r\n\r\n  return (\r\n    <div className=\"table-fixed\">\r\n      <TableComponent {...props}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Library;\r\n\r\n// Library reads from json\r\n// whenever video is added to queue, check if already in library.\r\n// If so dont do anything\r\n// If not, ask if want to add to library. If so, prompt for song name and artist. then add to json and current library state\r\n","D:\\Documents\\GitHub\\karaoke\\client\\src\\reportWebVitals.js",[],"D:\\Documents\\GitHub\\karaoke\\client\\src\\index.js",[],"D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\PlaybackOptions.js",["80","81","82"],"import React from 'react';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction PlaybackOptions(props) {\r\n  return (\r\n    <>\r\n      <a className=\"dropdown-item\" onClick={props.skipSong}> Skip </a>\r\n      <a className=\"dropdown-item\" onClick={() => {\r\n        if (!props.stop) {\r\n          props.stopSong();\r\n        }\r\n      }}> Stop </a>\r\n      <a className=\"dropdown-item\" onClick={props.playSong}> Play </a>\r\n    </>\r\n  );\r\n}\r\n\r\n  export default PlaybackOptions\r\n","D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\Importer.js",[],"D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\UserLibrary.js",["83"],"D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\UserPlaybackOptions.js",["84"],"D:\\Documents\\GitHub\\karaoke\\client\\src\\components\\UserQueue.js",["85","86"],{"ruleId":"87","severity":1,"message":"88","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":9},{"ruleId":"91","severity":1,"message":"92","line":76,"column":6,"nodeType":"93","endLine":76,"endColumn":19,"suggestions":"94"},{"ruleId":null,"fatal":true,"severity":2,"message":"95","line":63,"column":2},{"ruleId":"87","severity":1,"message":"96","line":5,"column":23,"nodeType":"89","messageId":"90","endLine":5,"endColumn":32},{"ruleId":"97","severity":1,"message":"98","line":31,"column":15,"nodeType":"99","endLine":31,"endColumn":105},{"ruleId":"97","severity":1,"message":"98","line":39,"column":15,"nodeType":"99","endLine":39,"endColumn":105},{"ruleId":"97","severity":1,"message":"98","line":47,"column":15,"nodeType":"99","endLine":47,"endColumn":105},{"ruleId":"97","severity":1,"message":"98","line":82,"column":15,"nodeType":"99","endLine":82,"endColumn":105},{"ruleId":"87","severity":1,"message":"100","line":8,"column":9,"nodeType":"89","messageId":"90","endLine":8,"endColumn":15},{"ruleId":"87","severity":1,"message":"101","line":8,"column":27,"nodeType":"89","messageId":"90","endLine":8,"endColumn":30},{"ruleId":"87","severity":1,"message":"102","line":8,"column":37,"nodeType":"89","messageId":"90","endLine":8,"endColumn":47},{"ruleId":"87","severity":1,"message":"103","line":8,"column":49,"nodeType":"89","messageId":"90","endLine":8,"endColumn":60},{"ruleId":"87","severity":1,"message":"104","line":8,"column":62,"nodeType":"89","messageId":"90","endLine":8,"endColumn":68},{"ruleId":"87","severity":1,"message":"96","line":8,"column":70,"nodeType":"89","messageId":"90","endLine":8,"endColumn":79},{"ruleId":"91","severity":1,"message":"105","line":103,"column":7,"nodeType":"93","endLine":103,"endColumn":9,"suggestions":"106"},{"ruleId":"97","severity":1,"message":"98","line":8,"column":7,"nodeType":"99","endLine":8,"endColumn":61},{"ruleId":"97","severity":1,"message":"98","line":9,"column":7,"nodeType":"99","endLine":13,"endColumn":10},{"ruleId":"97","severity":1,"message":"98","line":14,"column":7,"nodeType":"99","endLine":14,"endColumn":61},{"ruleId":"91","severity":1,"message":"105","line":98,"column":7,"nodeType":"93","endLine":98,"endColumn":9,"suggestions":"107"},{"ruleId":"87","severity":1,"message":"96","line":4,"column":10,"nodeType":"89","messageId":"90","endLine":4,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":9},{"ruleId":"91","severity":1,"message":"92","line":74,"column":6,"nodeType":"93","endLine":74,"endColumn":19,"suggestions":"108"},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'props' and 'uuidv4'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useMemo call and refer to those specific props inside useMemo.","ArrayExpression",["109"],"Parsing error: Unexpected token\n\n  61 |   }\n  62 | \n> 63 | <<<<<<< Updated upstream\n     |  ^\n  64 | =======\n  65 |   function editLibrary(song) {\n  66 |     console.log('Edit Library');","'Container' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Navbar' is defined but never used.","'Col' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","React Hook useMemo has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useMemo call and refer to those specific props inside useMemo.",["110"],["111"],["112"],{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"115","fix":"117"},{"desc":"113","fix":"118"},"Update the dependencies array to be: [props, uuidv4]",{"range":"119","text":"120"},"Update the dependencies array to be: [props]",{"range":"121","text":"122"},{"range":"123","text":"122"},{"range":"124","text":"120"},[3115,3128],"[props, uuidv4]",[2892,2894],"[props]",[2781,2783],[3068,3081]]