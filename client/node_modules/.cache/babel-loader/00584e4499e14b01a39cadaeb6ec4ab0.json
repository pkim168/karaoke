{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\karaoke\\\\client\\\\src\\\\components\\\\Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport ReactPlayer from 'react-player';\nimport sample from '../assets/Distant_Lights_4K_Motion_Background_Loop.gif';\n\nfunction Player(props) {\n  _s();\n\n  useEffect(() => {\n    console.log(\"effect\");\n    console.log(props.play);\n  }, [props.song]); // <video playsInline=\"playsinline\" autoPlay loop={props.loop}>\n  //   <source src={props.video} type=\"video/mp4\" />\n  // </video>\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-background-holder\",\n      style: {\n        backgroundImage: `url(${sample})`,\n        backgroundSize: \"cover\"\n      },\n      children: props.play && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-background-overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          url: props.song,\n          width: \"100%\",\n          height: \"100%\",\n          playing: true,\n          playsinline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Player, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["D:/Documents/GitHub/karaoke/client/src/components/Player.js"],"names":["React","useEffect","ReactPlayer","sample","Player","props","console","log","play","song","backgroundImage","backgroundSize"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uDAAP;AACA,OAAO,yDAAP;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,wDAAnB;;AAGA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAErBJ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;AACD,GAHQ,EAGN,CAACH,KAAK,CAACI,IAAP,CAHM,CAAT,CAFqB,CAOrB;AACA;AACA;;AACA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAyC,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAG,OAAMP,MAAO,GAAhC;AAAoCQ,QAAAA,cAAc,EAAC;AAAnD,OAAhD;AAAA,gBACGN,KAAK,CAACG,IAAN,iBACC;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,GAAG,EAAEH,KAAK,CAACI,IAAxB;AAA8B,UAAA,KAAK,EAAE,MAArC;AAA6C,UAAA,MAAM,EAAE,MAArD;AAA6D,UAAA,OAAO,EAAE,IAAtE;AAA4E,UAAA,WAAW;AAAvF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAYD;;GAtBQL,M;;KAAAA,M;AAwBT,eAAeA,MAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport ReactPlayer from 'react-player';\r\nimport sample from '../assets/Distant_Lights_4K_Motion_Background_Loop.gif';\r\n\r\n\r\nfunction Player(props) {\r\n\r\n  useEffect(() => {\r\n    console.log(\"effect\")\r\n    console.log(props.play)\r\n  }, [props.song])\r\n\r\n  // <video playsInline=\"playsinline\" autoPlay loop={props.loop}>\r\n  //   <source src={props.video} type=\"video/mp4\" />\r\n  // </video>\r\n  return (\r\n    <>\r\n      <div className=\"video-background-holder\" style={{backgroundImage: `url(${sample})`, backgroundSize:\"cover\"}}>\r\n        {props.play &&\r\n          <>\r\n            <div className=\"video-background-overlay\"></div>\r\n            <ReactPlayer url={props.song} width={\"100%\"} height={\"100%\"} playing={true} playsinline/>\r\n          </>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Player;\r\n"]},"metadata":{},"sourceType":"module"}