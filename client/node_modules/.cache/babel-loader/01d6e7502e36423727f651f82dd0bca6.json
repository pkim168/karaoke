{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\karaoke\\\\client\\\\src\\\\components\\\\Player.js\";\nimport React, { useState } from 'react';\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport ReactPlayer from 'react-player';\nimport sample from '../assets/sample.gif';\n\nfunction Player(props) {\n  // <video playsInline=\"playsinline\" autoPlay loop={props.loop}>\n  //   <source src={props.video} type=\"video/mp4\" />\n  // </video>\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-background-holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-background-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        playsInline: \"playsinline\",\n        autoPlay: true,\n        muted: true,\n        loop: this.props.loop,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: this.props.video,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, this.props.flag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), props.playing && /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        url: props.video,\n        width: \"100%\",\n        height: \"100%\",\n        playing: true,\n        loop: props.loop,\n        playsinline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["D:/Documents/GitHub/karaoke/client/src/components/Player.js"],"names":["React","useState","ReactPlayer","sample","Player","props","loop","video","flag","playing"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,uDAAP;AACA,OAAO,yDAAP;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAErB;AACA;AACA;AACA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAA6B,QAAA,WAAW,EAAC,aAAzC;AAAuD,QAAA,QAAQ,MAA/D;AAAgE,QAAA,KAAK,MAArE;AAAsE,QAAA,IAAI,EAAE,KAAKA,KAAL,CAAWC,IAAvF;AAAA,+BACE;AAAQ,UAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,KAAxB;AAA+B,UAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF,SAAY,KAAKF,KAAL,CAAWG,IAAvB;AAAA;AAAA;AAAA;AAAA,cAFF,EAKGH,KAAK,CAACI,OAAN,iBACC,QAAC,WAAD;AAAa,QAAA,GAAG,EAAEJ,KAAK,CAACE,KAAxB;AAA+B,QAAA,KAAK,EAAE,MAAtC;AAA8C,QAAA,MAAM,EAAE,MAAtD;AAA8D,QAAA,OAAO,EAAE,IAAvE;AAA6E,QAAA,IAAI,EAAEF,KAAK,CAACC,IAAzF;AAA+F,QAAA,WAAW;AAA1G;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD;;KAlBQF,M;AAoBT,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport ReactPlayer from 'react-player';\r\nimport sample from '../assets/sample.gif';\r\n\r\n\r\nfunction Player(props) {\r\n\r\n  // <video playsInline=\"playsinline\" autoPlay loop={props.loop}>\r\n  //   <source src={props.video} type=\"video/mp4\" />\r\n  // </video>\r\n  return (\r\n    <>\r\n      <div className=\"video-background-holder\">\r\n        <div className=\"video-background-overlay\"></div>\r\n        <video key={this.props.flag} playsInline=\"playsinline\" autoPlay muted loop={this.props.loop}>\r\n          <source src={this.props.video} type=\"video/mp4\" />\r\n        </video>\r\n        {props.playing &&\r\n          <ReactPlayer url={props.video} width={\"100%\"} height={\"100%\"} playing={true} loop={props.loop} playsinline/>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Player;\r\n"]},"metadata":{},"sourceType":"module"}