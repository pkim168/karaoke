{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\karaoke\\\\client\\\\src\\\\components\\\\Player.js\";\nimport React, { useEffect } from 'react';\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport ReactPlayer from 'react-player';\nimport sample from '../assets/Distant_Lights_4K_Motion_Background_Loop.gif';\n\nfunction Player(props) {\n  // useEffect(() => {\n  // }, [props.song])\n  // <video playsInline=\"playsinline\" autoPlay loop={props.loop}>\n  //   <source src={props.video} type=\"video/mp4\" />\n  // </video>\n  // <ReactPlayer url={props.song} width={\"100%\"} height={\"100%\"} playing={true} onEnded={props.onSongEnd}playsinline/>\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-background-holder\",\n      style: {\n        backgroundImage: `url(${sample})`,\n        backgroundSize: \"cover\"\n      },\n      children: props.play && props.song && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-background-overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: \"playsinline\",\n          autoPlay: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: props.song,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["D:/Documents/GitHub/karaoke/client/src/components/Player.js"],"names":["React","useEffect","ReactPlayer","sample","Player","props","backgroundImage","backgroundSize","play","song"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uDAAP;AACA,OAAO,yDAAP;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,wDAAnB;;AAGA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAErB;AACA;AAEA;AACA;AACA;AAGA;AACA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAyC,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAG,OAAMH,MAAO,GAAhC;AAAoCI,QAAAA,cAAc,EAAC;AAAnD,OAAhD;AAAA,gBACGF,KAAK,CAACG,IAAN,IAAcH,KAAK,CAACI,IAApB,iBACC;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,WAAW,EAAC,aAAnB;AAAiC,UAAA,QAAQ,MAAzC;AAAA,iCACE;AAAQ,YAAA,GAAG,EAAEJ,KAAK,CAACI,IAAnB;AAAyB,YAAA,IAAI,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD;;KAzBQL,M;AA2BT,eAAeA,MAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport ReactPlayer from 'react-player';\r\nimport sample from '../assets/Distant_Lights_4K_Motion_Background_Loop.gif';\r\n\r\n\r\nfunction Player(props) {\r\n\r\n  // useEffect(() => {\r\n  // }, [props.song])\r\n\r\n  // <video playsInline=\"playsinline\" autoPlay loop={props.loop}>\r\n  //   <source src={props.video} type=\"video/mp4\" />\r\n  // </video>\r\n\r\n\r\n  // <ReactPlayer url={props.song} width={\"100%\"} height={\"100%\"} playing={true} onEnded={props.onSongEnd}playsinline/>\r\n  return (\r\n    <>\r\n      <div className=\"video-background-holder\" style={{backgroundImage: `url(${sample})`, backgroundSize:\"cover\"}}>\r\n        {props.play && props.song &&\r\n          <>\r\n            <div className=\"video-background-overlay\"></div>\r\n            <video playsInline=\"playsinline\" autoPlay>\r\n              <source src={props.song} type=\"video/mp4\" />\r\n            </video>\r\n          </>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Player;\r\n"]},"metadata":{},"sourceType":"module"}