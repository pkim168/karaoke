{"ast":null,"code":"const os = require('os');\n\nfunction _normalizeFamily(family) {\n  return family ? family.toLowerCase() : 'ipv4';\n}\n\nfunction isLoopback(addr) {\n  return /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})/.test(addr) || /^fe80::1$/.test(addr) || /^::1$/.test(addr) || /^::$/.test(addr);\n}\n\n;\n\nfunction isPrivate(addr) {\n  return /^(::f{4}:)?10\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) || /^(::f{4}:)?192\\.168\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) || /^(::f{4}:)?172\\.(1[6-9]|2\\d|30|31)\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) || /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) || /^(::f{4}:)?169\\.254\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) || /^f[cd][0-9a-f]{2}:/i.test(addr) || /^fe80:/i.test(addr) || /^::1$/.test(addr) || /^::$/.test(addr);\n}\n\n;\n\nfunction isPublic(addr) {\n  return !isPrivate(addr);\n}\n\n; //\n// Default to `ipv4`\n//\n\nfunction loopback(family) {\n  family = _normalizeFamily(family);\n\n  if (family !== 'ipv4' && family !== 'ipv6') {\n    throw new Error('family must be ipv4 or ipv6');\n  }\n\n  return family === 'ipv4' ? '127.0.0.1' : 'fe80::1';\n}\n\n; //\n// ### function address (name, family)\n// #### @name {string|'public'|'private'} **Optional** Name or security\n//      of the network interface.\n// #### @family {ipv4|ipv6} **Optional** IP family of the address (defaults\n//      to ipv4).\n//\n// Returns the address for the network interface on the current system with\n// the specified `name`:\n//   * String: First `family` address of the interface.\n//             If not found see `undefined`.\n//   * 'public': the first public ip address of family.\n//   * 'private': the first private ip address of family.\n//   * undefined: First address with `ipv4` or loopback address `127.0.0.1`.\n//\n\nmodule.exports = function localIpUrl(name, family) {\n  var interfaces = os.networkInterfaces();\n  var all; //\n  // Default to `ipv4`\n  //\n\n  family = _normalizeFamily(family); //\n  // If a specific network interface has been named,\n  // return the address.\n  //\n\n  if (name && name !== 'private' && name !== 'public') {\n    var res = interfaces[name].filter(function (details) {\n      var itemFamily = details.family.toLowerCase();\n      return itemFamily === family;\n    });\n    if (res.length === 0) return undefined;\n    return res[0].address;\n  }\n\n  var all = Object.keys(interfaces).map(function (nic) {\n    //\n    // Note: name will only be `public` or `private`\n    // when this is called.\n    //\n    var addresses = interfaces[nic].filter(function (details) {\n      details.family = details.family.toLowerCase();\n\n      if (details.family !== family || isLoopback(details.address)) {\n        return false;\n      } else if (!name) {\n        return true;\n      }\n\n      return name === 'public' ? isPrivate(details.address) : isPublic(details.address);\n    });\n    return addresses.length ? addresses[0].address : undefined;\n  }).filter(Boolean);\n  return !all.length ? loopback(family) : all[0];\n};","map":{"version":3,"sources":["D:/Documents/GitHub/karaoke/client/node_modules/local-ip-url/index.js"],"names":["os","require","_normalizeFamily","family","toLowerCase","isLoopback","addr","test","isPrivate","isPublic","loopback","Error","module","exports","localIpUrl","name","interfaces","networkInterfaces","all","res","filter","details","itemFamily","length","undefined","address","Object","keys","map","nic","addresses","Boolean"],"mappings":"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","sourcesContent":["const os = require('os');\n\nfunction _normalizeFamily(family) {\n  return family ? family.toLowerCase() : 'ipv4';\n}\n\nfunction isLoopback(addr) {\n  return /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})/\n    .test(addr) ||\n    /^fe80::1$/.test(addr) ||\n    /^::1$/.test(addr) ||\n    /^::$/.test(addr);\n};\n\nfunction isPrivate(addr) {\n  return /^(::f{4}:)?10\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i\n    .test(addr) ||\n    /^(::f{4}:)?192\\.168\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) ||\n    /^(::f{4}:)?172\\.(1[6-9]|2\\d|30|31)\\.([0-9]{1,3})\\.([0-9]{1,3})$/i\n      .test(addr) ||\n    /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) ||\n    /^(::f{4}:)?169\\.254\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) ||\n    /^f[cd][0-9a-f]{2}:/i.test(addr) ||\n    /^fe80:/i.test(addr) ||\n    /^::1$/.test(addr) ||\n    /^::$/.test(addr);\n};\n\nfunction isPublic(addr) {\n  return !isPrivate(addr);\n};\n\n//\n// Default to `ipv4`\n//\nfunction loopback(family) {\n  family = _normalizeFamily(family);\n\n  if (family !== 'ipv4' && family !== 'ipv6') {\n    throw new Error('family must be ipv4 or ipv6');\n  }\n\n  return family === 'ipv4' ? '127.0.0.1' : 'fe80::1';\n};\n\n\n//\n// ### function address (name, family)\n// #### @name {string|'public'|'private'} **Optional** Name or security\n//      of the network interface.\n// #### @family {ipv4|ipv6} **Optional** IP family of the address (defaults\n//      to ipv4).\n//\n// Returns the address for the network interface on the current system with\n// the specified `name`:\n//   * String: First `family` address of the interface.\n//             If not found see `undefined`.\n//   * 'public': the first public ip address of family.\n//   * 'private': the first private ip address of family.\n//   * undefined: First address with `ipv4` or loopback address `127.0.0.1`.\n//\nmodule.exports = function localIpUrl(name, family) {\n  var interfaces = os.networkInterfaces();\n  var all;\n  //\n  // Default to `ipv4`\n  //\n  family = _normalizeFamily(family);\n\n  //\n  // If a specific network interface has been named,\n  // return the address.\n  //\n  if (name && name !== 'private' && name !== 'public') {\n    var res = interfaces[name].filter(function (details) {\n      var itemFamily = details.family.toLowerCase();\n      return itemFamily === family;\n    });\n    if (res.length === 0)\n      return undefined;\n    return res[0].address;\n  }\n\n  var all = Object.keys(interfaces).map(function (nic) {\n    //\n    // Note: name will only be `public` or `private`\n    // when this is called.\n    //\n    var addresses = interfaces[nic].filter(function (details) {\n      details.family = details.family.toLowerCase();\n      if (details.family !== family || isLoopback(details.address)) {\n        return false;\n      } else if (!name) {\n        return true;\n      }\n\n      return name === 'public' ? isPrivate(details.address) : isPublic(details.address);\n    });\n\n    return addresses.length ? addresses[0].address : undefined;\n  }).filter(Boolean);\n\n  return !all.length ? loopback(family) : all[0];\n}\n"]},"metadata":{},"sourceType":"script"}