{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\karaoke\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport Home from './components/Home.js';\nimport Host from './components/Host.js';\nimport User from './components/User.js'; //Do i need to include this line in every file that uses socket even when ive passed through props?\n\nvar socketClient = require('socket.io-client');\n\nfunction App() {\n  _s();\n\n  const socket = useRef(null);\n  const role = useRef(null);\n  const flag = useRef(true);\n  const [page, setPage] = useState(\"home\");\n  const [library, setLibrary] = useState({});\n  const [queue, setQueue] = useState([]);\n\n  function addSong(song) {\n    console.log('Add Song');\n    console.log(queue);\n    setQueue([...queue, song]);\n  }\n\n  function connect(userType, ip) {\n    if (!ip) {\n      alert(\"IP address is needed\");\n      return;\n    }\n\n    socket.current = socketClient(ip + ':4000');\n    socket.current.on(\"connection\", user => {\n      role.current = user;\n      console.log(role.current);\n      console.log(socket.current.id);\n      setPage(userType);\n    });\n    socket.current.on(\"close\", () => {\n      flag.current = false;\n      socket.current.close();\n      console.log(\"Disconnected from server\");\n    });\n    socket.current.on(\"connect_error\", error => {\n      socket.current.close();\n      alert(\"Host not available\");\n      return;\n    });\n    socket.current.on(\"connect_timeout\", error => {\n      socket.current.close();\n      alert(\"Host not available\");\n      return;\n    });\n    socket.current.on(\"library\", data => {\n      setLibrary(data);\n    });\n  }\n\n  useEffect(() => {\n    return () => {\n      if (flag) socket.current.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [page === \"home\" && /*#__PURE__*/_jsxDEV(Home, {\n      connect: connect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 27\n    }, this), page === \"host\" && /*#__PURE__*/_jsxDEV(Host, {\n      socket: socket.current,\n      library: library,\n      queue: queue,\n      addSong: addSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 27\n    }, this), page === \"user\" && /*#__PURE__*/_jsxDEV(User, {\n      socket: socket.current,\n      library: library,\n      queue: queue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zNb3tcKv//3h73FwBA3vL6GnlVA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Documents/GitHub/karaoke/client/src/App.js"],"names":["React","useRef","useState","useEffect","Home","Host","User","socketClient","require","App","socket","role","flag","page","setPage","library","setLibrary","queue","setQueue","addSong","song","console","log","connect","userType","ip","alert","current","on","user","id","close","error","data"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,IAAP,MAAiB,sBAAjB,C,CACA;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,kBAAD,CAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGT,MAAM,CAAC,IAAD,CAArB;AACA,QAAMU,IAAI,GAAGV,MAAM,CAAC,IAAD,CAAnB;AACA,QAAMW,IAAI,GAAGX,MAAM,CAAC,IAAD,CAAnB;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,MAAD,CAAhC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASiB,OAAT,CAAiBC,IAAjB,EAAuB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAC,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWG,IAAX,CAAD,CAAR;AACD;;AAED,WAASG,OAAT,CAAiBC,QAAjB,EAA2BC,EAA3B,EAA+B;AAC7B,QAAI,CAACA,EAAL,EAAS;AACPC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACA;AACD;;AACDhB,IAAAA,MAAM,CAACiB,OAAP,GAAiBpB,YAAY,CAACkB,EAAE,GAAC,OAAJ,CAA7B;AAEAf,IAAAA,MAAM,CAACiB,OAAP,CAAeC,EAAf,CAAkB,YAAlB,EAAgCC,IAAI,IAAI;AACtClB,MAAAA,IAAI,CAACgB,OAAL,GAAeE,IAAf;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACgB,OAAjB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAM,CAACiB,OAAP,CAAeG,EAA3B;AACAhB,MAAAA,OAAO,CAACU,QAAD,CAAP;AACD,KALD;AAOAd,IAAAA,MAAM,CAACiB,OAAP,CAAeC,EAAf,CAAkB,OAAlB,EAA2B,MAAM;AAC/BhB,MAAAA,IAAI,CAACe,OAAL,GAAe,KAAf;AACAjB,MAAAA,MAAM,CAACiB,OAAP,CAAeI,KAAf;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,KAJD;AAMAZ,IAAAA,MAAM,CAACiB,OAAP,CAAeC,EAAf,CAAkB,eAAlB,EAAoCI,KAAD,IAAW;AAC5CtB,MAAAA,MAAM,CAACiB,OAAP,CAAeI,KAAf;AACAL,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACA;AACD,KAJD;AAMAhB,IAAAA,MAAM,CAACiB,OAAP,CAAeC,EAAf,CAAkB,iBAAlB,EAAsCI,KAAD,IAAW;AAC9CtB,MAAAA,MAAM,CAACiB,OAAP,CAAeI,KAAf;AACAL,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACA;AACD,KAJD;AAMAhB,IAAAA,MAAM,CAACiB,OAAP,CAAeC,EAAf,CAAkB,SAAlB,EAA8BK,IAAD,IAAU;AACrCjB,MAAAA,UAAU,CAACiB,IAAD,CAAV;AACD,KAFD;AAGD;;AAED9B,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX,UAAIS,IAAJ,EACEF,MAAM,CAACiB,OAAP,CAAeI,KAAf;AACH,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGlB,IAAI,KAAK,MAAT,iBAAmB,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEU;AAAf;AAAA;AAAA;AAAA;AAAA,YADtB,EAEGV,IAAI,KAAK,MAAT,iBAAmB,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEH,MAAM,CAACiB,OAArB;AAA8B,MAAA,OAAO,EAAEZ,OAAvC;AAAgD,MAAA,KAAK,EAAEE,KAAvD;AAA8D,MAAA,OAAO,EAAEE;AAAvE;AAAA;AAAA;AAAA;AAAA,YAFtB,EAGGN,IAAI,KAAK,MAAT,iBAAmB,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEH,MAAM,CAACiB,OAArB;AAA8B,MAAA,OAAO,EAAEZ,OAAvC;AAAgD,MAAA,KAAK,EAAEE;AAAvD;AAAA;AAAA;AAAA;AAAA,YAHtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAjEQR,G;;KAAAA,G;AAmET,eAAeA,GAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport Home from './components/Home.js';\nimport Host from './components/Host.js';\nimport User from './components/User.js';\n//Do i need to include this line in every file that uses socket even when ive passed through props?\nvar socketClient = require('socket.io-client');\n\nfunction App() {\n  const socket = useRef(null);\n  const role = useRef(null);\n  const flag = useRef(true);\n  const [page, setPage] = useState(\"home\");\n  const [library, setLibrary] = useState({});\n  const [queue, setQueue] = useState([]);\n\n  function addSong(song) {\n    console.log('Add Song');\n    console.log(queue);\n    setQueue([...queue, song])\n  }\n\n  function connect(userType, ip) {\n    if (!ip) {\n      alert(\"IP address is needed\");\n      return;\n    }\n    socket.current = socketClient(ip+':4000');\n\n    socket.current.on(\"connection\", user => {\n      role.current = user;\n      console.log(role.current);\n      console.log(socket.current.id);\n      setPage(userType);\n    });\n\n    socket.current.on(\"close\", () => {\n      flag.current = false;\n      socket.current.close();\n      console.log(\"Disconnected from server\");\n    });\n\n    socket.current.on(\"connect_error\", (error) => {\n      socket.current.close();\n      alert(\"Host not available\");\n      return;\n    });\n\n    socket.current.on(\"connect_timeout\", (error) => {\n      socket.current.close();\n      alert(\"Host not available\");\n      return;\n    });\n\n    socket.current.on(\"library\", (data) => {\n      setLibrary(data);\n    })\n  }\n\n  useEffect(() => {\n    return () => {\n      if (flag)\n        socket.current.close();\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {page === \"home\" && <Home connect={connect} />}\n      {page === \"host\" && <Host socket={socket.current} library={library} queue={queue} addSong={addSong} />}\n      {page === \"user\" && <User socket={socket.current} library={library} queue={queue} />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}