{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\karaoke\\\\client\\\\src\\\\components\\\\Library.js\";\nimport React, { useState } from 'react';\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table';\nimport matchSorter from 'match-sorter';\n\nfunction Library(props) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\" \", JSON.stringify(props.library), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Library;\nexport default Library; // Library reads from json\n// whenever video is added to queue, check if already in library.\n// If so dont do anything\n// If not, ask if want to add to library. If so, prompt for song name and artist. then add to json and current library state\n\nvar _c;\n\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"sources":["D:/Documents/GitHub/karaoke/client/src/components/Library.js"],"names":["React","useState","useTable","useFilters","useGlobalFilter","useAsyncDebounce","matchSorter","Library","props","JSON","stringify","library"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,uDAAP;AACA,OAAO,yDAAP;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,eAA/B,EAAgDC,gBAAhD,QAAwE,aAAxE;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEtB,sBACE;AAAA,oBAAMC,IAAI,CAACC,SAAL,CAAeF,KAAK,CAACG,OAArB,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;KALQJ,O;AAOT,eAAeA,OAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\n\r\n\r\nfunction Library(props) {\r\n\r\n  return (\r\n    <h1> {JSON.stringify(props.library)} </h1>\r\n  )\r\n}\r\n\r\nexport default Library;\r\n\r\n// Library reads from json\r\n// whenever video is added to queue, check if already in library.\r\n// If so dont do anything\r\n// If not, ask if want to add to library. If so, prompt for song name and artist. then add to json and current library state\r\n"]},"metadata":{},"sourceType":"module"}