{"ast":null,"code":"const express = require('express');\n\nconst http = require('http');\n\nvar socketIo = require('socket.io');\n\nconst port = process.env.PORT || 4001;\nconst app = express();\napp.set('port', port);\nconst server = http.createServer(app);\nconst io = socketIo(server); // const pool = require('./controllers/mongodbpool');\n// pool.connectToServer( function (err) {\n// const index = require(\"./routes/index.routes.js\")(io);\n// app.use('/', index);\n// });\n\nvar playerJson = {}; // io.on(\"connection\", (socket) => {\n//   if (Object.keys(playerJson).length === 0) {\n//     playerJson[socket] = \"Host\";\n//   }\n//   else if (Object.keys(playerJson).length < 4) {\n//     for (var i=1; i < 4; i++) {\n//       if (!(i in Object.values(playerJson))) {\n//         playerJson[socket] = i;\n//         socket.emit('user', playerJson[socket]);\n//       }\n//       break;\n//     }\n//   }\n//   else {\n//     socket.disconnect();\n//   }\n// })\n//\n// io.on(\"disconnect\", (socket) => {\n//   if (playerJson[socket] === \"Host\") {\n//     Object.keys(playerJson).forEach((key) => {\n//       key.disconnect();\n//     })\n//     playerJson = {};\n//   }\n//   else {\n//     socket.disconnect();\n//     delete playerJson[socket];\n//   }\n// })\n\nserver.listen(port, () => {\n  // Tell us what port it's running on\n  console.log(\"Karaoke server started on \" + port);\n});\nconst getApiAndEmit = \"TODO\";\nmodule.exports = app;","map":{"version":3,"sources":["D:/Documents/GitHub/karaoke/src/App.js"],"names":["express","require","http","socketIo","port","process","env","PORT","app","set","server","createServer","io","playerJson","listen","console","log","getApiAndEmit","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,WAAD,CAAtB;;AAEA,MAAMG,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEA,MAAMC,GAAG,GAAGR,OAAO,EAAnB;AACAQ,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBL,IAAhB;AAEA,MAAMM,MAAM,GAAGR,IAAI,CAACS,YAAL,CAAkBH,GAAlB,CAAf;AAEA,MAAMI,EAAE,GAAGT,QAAQ,CAACO,MAAD,CAAnB,C,CAGA;AACA;AACE;AACA;AACF;;AAEA,IAAIG,UAAU,GAAG,EAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAH,MAAM,CAACI,MAAP,CAAcV,IAAd,EAAoB,MAAM;AACxB;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BZ,IAA3C;AACD,CAHD;AAKA,MAAMa,aAAa,GAAG,MAAtB;AAEAC,MAAM,CAACC,OAAP,GAAiBX,GAAjB","sourcesContent":["const express = require('express');\nconst http = require('http');\nvar socketIo = require('socket.io');\n\nconst port = process.env.PORT || 4001;\n\nconst app = express();\napp.set('port', port);\n\nconst server = http.createServer(app);\n\nconst io = socketIo(server);\n\n\n// const pool = require('./controllers/mongodbpool');\n// pool.connectToServer( function (err) {\n  // const index = require(\"./routes/index.routes.js\")(io);\n  // app.use('/', index);\n// });\n\nvar playerJson = {};\n\n// io.on(\"connection\", (socket) => {\n//   if (Object.keys(playerJson).length === 0) {\n//     playerJson[socket] = \"Host\";\n//   }\n//   else if (Object.keys(playerJson).length < 4) {\n//     for (var i=1; i < 4; i++) {\n//       if (!(i in Object.values(playerJson))) {\n//         playerJson[socket] = i;\n//         socket.emit('user', playerJson[socket]);\n//       }\n//       break;\n//     }\n//   }\n//   else {\n//     socket.disconnect();\n//   }\n// })\n//\n// io.on(\"disconnect\", (socket) => {\n//   if (playerJson[socket] === \"Host\") {\n//     Object.keys(playerJson).forEach((key) => {\n//       key.disconnect();\n//     })\n//     playerJson = {};\n//   }\n//   else {\n//     socket.disconnect();\n//     delete playerJson[socket];\n//   }\n// })\n\nserver.listen(port, () => {\n  // Tell us what port it's running on\n  console.log(\"Karaoke server started on \" + port)\n});\n\nconst getApiAndEmit = \"TODO\";\n\nmodule.exports = app;\n"]},"metadata":{},"sourceType":"module"}